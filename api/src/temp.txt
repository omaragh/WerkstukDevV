const express = require("express");
const app = express();
const key = require('./uuid');

const db = require('knex')({
  client: 'pg',
  version: '9.6',
  searchPath: ['knex', 'public'],
  connection: process.env.PG_CONNECTION_STRING ? process.env.PG_CONNECTION_STRING : 'postgres://yrkvklrh:C0UnGZ-wWcCZgLSmZSvky83lnqBMAtnF@tai.db.elephantsql.com/yrkvklrh'
});

app.use(express.json());
app.use(express.urlencoded({extended: true}));




app.get("/test", async (req, res) => {
  res.json({ message: "pass!" });
});


app.get('/users', async (req, res) => {
  const result = await db.select("*").from('users');
  res.json(result);
  console.log(result);
});

/** Get a user based on a unique identifier
 * @params
 * @returns all user data
 */
app.get('/user/:uuid', async (req, res) => {
  const result = await db.select(['*']).from('users').where({uuid: req.params.uuid})
  res.json(result)
});

/**  Creates a table including records
 * @params 
 * @returns all the inserted data
 */
 app.post('/user', async (req, res) => {
   if (!req.body.name){
     res.status(400).json('no name passed');
      return;
    }
    res.sendStatus(201);
  // const uuid = key.generateUUID();
  // const result = await db.insert([
  //     { uuid, name: 'Omar', age: '25'},
  //   ]).table('users').returning('*').then((res) => {return res;});
  // console.log('add user');
  // console.log(result);
  // res.send(result);
});

/** Delete all data of a user based on a unique identifier
 * @param
 * @returns the deleted user
 */
app.delete('/deleteUser/:uuid', async (req, res) => {
  const result = await db.table('users').where({ uuid: req.params.uuid}).del('*').then((res) => {return res;});
  console.log("delete user");
  console.log(result);
  res.send(result);
});
 
/** Creates a table for users
 * @param
 * @returns a table user with the neccessary rows
 */
async function createTable() {
  await db.schema.hasTable('users').then(async (exists) => {
    if (!exists) {await db.schema.createTable('users', (table) => {
          table.uuid('uuid');
          table.string('name');
          table.string('age');
        }).then(async () => {console.log('created new table users');
      });
    }
  });
}
createTable()
module.exports = app


